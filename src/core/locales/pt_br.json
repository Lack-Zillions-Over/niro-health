{
  "middlewares": {
    "authorization": {
      "exception": "Chave de API está invalida. Tente novamente, mais tarde!"
    },
    "authorization-private-key": {
      "exception": "Chave Secreta de API está invalida. Tente novamente, mais tarde!"
    }
  },
  "users": {
    "repository": {
      "session_inactive": "Sessões estão temporariamente inativas",
      "user_already_exists": "Usuário com $1 \"$2\" já existe",
      "user_not_exists": "Usuário com $1 \"$2\" não foi encontrado",
      "field_in_use": "$1 \"$2\" já está em uso",
      "password_incorrect": "Senha está incorreta",
      "user_is_banned": "Usuário com $1 \"$2\" está banido",
      "user_session_exceed_limit": "Usuário com $1 \"$2\" excedeu o limite de $3 conexões simultâneas",
      "user_session_ipAddress_not_allowed": "Endereço de IP \"$1\" não está liberado pelo usuário",
      "user_session_ipAddress_is_blocked": "Endereço de IP \"$1\" está bloqueado pelo usuário",
      "user_session_device_not_allowed": "Dispositivo \"$1\" não está liberado pelo usuário",
      "user_session_ipAddress_already_connected": "Endereço de IP \"$1\" já possui uma sessão conectada",
      "user_not_connected": "Usuário com $1 \"$2\" não está conectado",
      "session_canceled": "Essa sessão foi cancelada. Por favor, conecte novamente!",
      "session_geoip_not_equal_stored": "Sua GEO localização mudou. Por favor, conecte novamente!",
      "session_access_token_is_not_same_ip_address": "Sessão confirmada em outro endereço de IP \"$1\"",
      "session_device_is_not_same_in_history": "Dispositivo \"$1\" não foi encontrado para essa sessão",
      "session_token_revalidate_is_invalid": "Seu token de revalidação está invalido. Por favor, reconecte!",
      "session_token_revalidate_ipAddress_is_not_stored": "Endereço de IP \"$1\" não é igual ao IP armazenado para o seu token de revalidação",
      "session_access_token_expired": "Sessão expirada. Por favor, reconecte!"
    }
  },
  "private-keys": {
    "repository": {
      "private_key_already_exists": "Chave privada com $1 \"$2\" já existe",
      "private_key_not_found": "Chave privada com $1 \"$2\" não foi encontrada",
      "invalid_secret": "Segredo da chave privada está invalido.",
      "field_in_use": "$1 \"$2\" já está em uso"
    }
  },
  "tests": {
    "users": {
      "usecases": {
        "create": {
          "describe": "UseCases -> Criação de usuário",
          "create_new_user": "Deve cria um novo usuário com dados validos",
          "not_create_user_with_same_username": "Não deve criar um usuário com o mesmo nome",
          "not_create_user_with_same_email": "Não deve criar um usuário com o mesmo email"
        },
        "find": {
          "id": {
            "describe": "UseCases -> Procurar por id de usuário",
            "find_id_valid": "Deve encontrar um usuário com id válido",
            "not_find_id_invalid": "Não deve encontrar um usuário com id inválido"
          },
          "username": {
            "describe": "UseCases -> Procurar por nome de usuário",
            "find_user_by_username": "Deve encontrar um usuário pelo nome de usuário",
            "not_find_username_invalid": "Não deve encontrar um usuário com nome inválido"
          },
          "all": {
            "describe": "UseCases -> Procura todos os usuários",
            "find_all_users": "Deve encontrar todos os usuários"
          }
        },
        "update": {
          "describe": "UseCases -> Atualização de usuário",
          "create_multiple_users": "Deve criar vários usuários",
          "update_valid_user": "Deve atualizar um usuário com dados validos",
          "not_update_without_user": "Não deve atualizar um usuário que não existe",
          "not_update_user_with_same_username": "Não deve atualizar um usuário com o mesmo nome"
        },
        "login": {
          "describe": "UseCases -> Login de sessão",
          "create_new_user": "Deve criar um novo usuário com dados validos",
          "login_without_register": "Não deve logar um usuário sem registro",
          "login_with_password_incorrect": "Não deve logar um usuário com a senha invalida",
          "login_with_password_incorrect_several_times": "Não deve fazer login com a senha incorreta várias vezes",
          "login_with_session_inactive": "Não deve logar um usuário com sessão inativa",
          "login_with_password_correct": "Deve logar o usuário com a senha valida",
          "login_user_in_same_ipAddress": "Não deve logar um usuário no mesmo endereço de IP de outra sessão",
          "login_user_banned": "Não deve logar um usuário banido",
          "login_with_device_not_allowed_by_user": "Não deve logar um usuário com um dispositivo não permitido",
          "login_with_ipAddress_not_allowed_by_user": "Não deve logar um usuário com um endereço de IP não permitido",
          "login_with_ipAddress_blocked_by_user": "Não deve logar um usuário com um endereço de IP bloqueado"
        },
        "session-validate": {
          "describe": "UseCases -> Validação de sessão",
          "validate_valid_session": "Deve validar uma sessão valida",
          "not_validate_session_with_invalid_username": "Não deve validar a sessão com nome de usuário invalido",
          "not_validate_session_with_invalid_token_value": "Não deve validar a sessão com um valor invalido de token",
          "not_validate_session_with_invalid_token_signature": "Não deve validar a sessão com uma assinatura invalida de token",
          "not_validate_session_with_invalid_token_revalidate_value": "Não deve validar a sessão com um valor invalido de token",
          "not_validate_session_with_invalid_token_revalidate_signature": "Não deve validar a sessão com uma assinatura invalida de token de revalidação",
          "not_validate_session_with_geoip_not_same_stored": "Não deve validar a sessão com uma GEO localização diferente da armazenada",
          "not_validate_session_with_device_not_same_stored": "Não deve validar a sessão com um dispositivo diferente do armazenado",
          "not_validate_session_with_token_revalidate_ipAddress_not_same_stored": "Não deve validar a sessão com um endereço de IP diferente do armazenado no token de revalidação",
          "not_validate_session_with_expired_token_revalidate": "Não deve validar a sessão com um token de revalidação expirado"
        },
        "logout": {
          "describe": "UseCases -> Logout de Sessão",
          "logout_valid_session": "Deve desconectar uma sessão valida",
          "not_logout_session_without_user": "Não deve desconectar uma sessão sem usuário",
          "not_logout_session_not_connected": "Não deve desconectar uma sessão não conectada"
        },
        "remove": {
          "describe": "UseCases -> Remoção de usuário",
          "not_remove_without_user": "Não deve remover um usuário que não existe",
          "remove_valid_user": "Deve remover um usuário valido"
        }
      }
    },
    "private-keys": {
      "usecases": {
        "create": {
          "describe": "UseCases -> Criação de chave privada",
          "create_new_key": "Deve criar uma nova chave com dados validos",
          "create_new_key_same_tag": "Não deve criar uma chave com a mesmo tag"
        },
        "validate" :{
          "describe": "UseCases -> Validação de chave privada",
          "validate_valid_key": "Deve validar uma chave privada valida",
          "not_validate_key_with_invalid_tag": "Não deve validar uma chave privada com tag invalida",
          "not_validate_key_with_invalid_secret": "Não deve validar uma chave privada com segredo invalido"
        },
        "update": {
          "describe": "UseCases -> Atualização de chave privada",
          "update_valid_key": "Deve atualizar uma chave privada com dados validos",
          "not_update_key_without_register" : "Não deve atualizar uma chave privada sem registro",
          "not_update_key_with_same_tag": "Não deve atualizar uma chave privada com uma tag igual"
        },
        "remove": {
          "describe": "UseCases -> Remoção de chave privada",
          "remove_valid_key": "Deve remover uma chave privada valida",
          "not_remove_key_without_register" : "Não deve remover uma chave privada sem registro"
        },
        "find": {
          "all": {
            "describe": "UseCases -> Busca de todas as chaves privadas",
            "find_all_keys": "Deve buscar todas as chaves privadas"
          },
          "tag": {
            "describe": "UseCases -> Busca de chave privada por tag",
            "find_key_with_valid_tag": "Deve buscar uma chave privada com tag valida",
            "not_find_key_with_invalid_tag": "Não deve buscar uma chave privada com tag invalida"
          }
        }
      }
    }
  }
}
